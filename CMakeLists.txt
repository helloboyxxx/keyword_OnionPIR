cmake_minimum_required(VERSION 3.13)
# Set build type to benchmark if not specified
if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Benchmark)
endif()


# automatically enables all available optimizations for your local machine, including AVX2 and AVX512
set(CMAKE_CXX_FLAGS "-O3 -g -std=c++17 -MD -march=native")

# add perf when building in Debug mode
if (CMAKE_BUILD_TYPE MATCHES Debug)
    set(CMAKE_CXX_FLAGS "-g -pg -O2")  # Enable profiling flags
endif()


option(NOAVX512 "Disable AVX-512" OFF)
option(NOAVX2 "Disable AVX2" OFF)
if (NOAVX512)
    message("Disabling AVX-512")
    add_compile_options(-mno-avx512f)
endif()
if (NOAVX2)
    message("Disabling AVX2")
    add_compile_options(-mno-avx2)
endif()


set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG")
set(IS_BENCHMARK_BUILD CMAKE_BUILD_TYPE STREQUAL "Benchmark")
if (${IS_BENCHMARK_BUILD})
    add_compile_definitions(_BENCHMARK)
    set(CMAKE_PREFIX_PATH ~/scratch/keyword_OnionPIR)
elseif (CMAKE_BUILD_TYPE MATCHES Debug)
    set(CMAKE_PREFIX_PATH ~/scratch/keyword_OnionPIR)
endif ()
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
project(Onion-PIR)
add_executable(Onion-PIR src/main.cpp src/client.cpp src/server.cpp src/pir.cpp src/utils.cpp src/external_prod.cpp src/tests.cpp src/test_query.cpp)
find_package(SEAL 4.1 REQUIRED)
target_link_libraries(Onion-PIR SEAL::seal)
target_include_directories(Onion-PIR PUBLIC src/includes)
